buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        mavenLocal()
    }
}


plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'org.springframework.boot' version '3.1.1'
}

repositories {
    mavenCentral()
    maven { url = uri('https://repo.maven.apache.org/maven2') }
    maven { url 'https://jitpack.io' }
    mavenLocal()
}

dependencies {
    //-------
    implementation 'org.springframework.boot:spring-boot-starter:3.1.1'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.javassist:javassist:3.29.2-GA'
    implementation 'org.liquibase:liquibase-core:4.22.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    //-------
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.1'
    implementation 'com.github.docker-java:docker-java-core:3.3.1'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.3.1'
    //-------
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    // ------
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.1'

    configurations {
        // get rid of hibernate-incompatible javassist
        all*.exclude group: 'javassist', module: 'javassist'
    }

}

group = 'com.dockui'
version = '1.0.0-SNAPSHOT'
description = 'dockui-node'
java.sourceCompatibility = JavaVersion.VERSION_17

springBoot {
    mainClassName = 'com.dockui.api.Application'
}

bootJar {
    mainClassName = 'com.dockui.api.Application'

    // Include necessary dependencies in the JAR
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Customize the manifest file
    manifest {
        attributes(
                'Implementation-Title': 'Dockui',
                'Main-Class': mainClassName
        )
    }
}
